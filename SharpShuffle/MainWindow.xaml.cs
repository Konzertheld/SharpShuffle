using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Collections.ObjectModel;
using System.Windows.Controls.Primitives;

namespace SharpShuffle
{
    /// <summary>
    /// Interaktionslogik für MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        ObservableCollection<Song> songs = new ObservableCollection<Song>();
        ObservableCollection<Song> playlist = new ObservableCollection<Song>();

        Player player;

        public MainWindow()
        {
            InitializeComponent();
            player = new Player();

            songs = new System.Collections.ObjectModel.ObservableCollection<Song>(Startup.ActiveDB.LoadSongs("Endsortierung"));
            playlist = new ObservableCollection<Song>(player.Playlist);

            lsvFilterPool.ItemsSource = Startup.ActiveDB.PoolList();
            
            dgrView.ItemsSource = songs;
            dgrView.AutoGeneratedColumns += new EventHandler(dgrView_AutoGeneratedColumns);

            lsvPlaylist.ItemsSource = playlist;
            ((GridView)(lsvPlaylist.View)).Columns.Add(new GridViewColumn());
            ((GridView)(lsvPlaylist.View)).Columns.Add(new GridViewColumn());
            ((GridView)(lsvPlaylist.View)).Columns[0].DisplayMemberBinding = new Binding("Artists");
            ((GridView)(lsvPlaylist.View)).Columns[1].DisplayMemberBinding = new Binding("Title");
            
        }

        private void RefreshPlaylist()
        {
            playlist = new ObservableCollection<Song>(player.Playlist);
            lsvPlaylist.ItemsSource = playlist;
            lsvPlaylist.Items.Refresh();
        }

        void dgrView_AutoGeneratedColumns(object sender, EventArgs e)
        {
            foreach (DataGridColumn col in dgrView.Columns)
            {
                MenuItem item = new MenuItem();
                item.Header = col.Header;
                item.IsChecked = true;
                menSpalten.Items.Add(item);
                item.Click += new RoutedEventHandler(dgrViewColumn_Click);
                item.Checked += new RoutedEventHandler(dgrViewColumn_Checked);
                item.Unchecked += new RoutedEventHandler(dgrViewColumn_Unchecked);
                item.Tag = col;
            }
        }

        void dgrViewColumn_Unchecked(object sender, RoutedEventArgs e)
        {
            MenuItem item = sender as MenuItem;
            ((DataGridColumn)item.Tag).Visibility = System.Windows.Visibility.Collapsed;
        }

        void dgrViewColumn_Checked(object sender, RoutedEventArgs e)
        {
            MenuItem item = sender as MenuItem;
            ((DataGridColumn)item.Tag).Visibility = System.Windows.Visibility.Visible;
        }

        void dgrViewColumn_Click(object sender, RoutedEventArgs e)
        {
            MenuItem item = sender as MenuItem;
            item.IsChecked = !item.IsChecked;
        }

        private void dgrView_MouseRightButtonUp(object sender, MouseButtonEventArgs e)
        {

        }
    }
}
